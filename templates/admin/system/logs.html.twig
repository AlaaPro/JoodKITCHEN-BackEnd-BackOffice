{% extends 'admin/base.html.twig' %}

{% block title %}Logs Système - JoodKitchen Admin{% endblock %}

{% block breadcrumb %}
<li class="breadcrumb-item"><a href="{{ path('admin_dashboard') }}">Accueil</a></li>
<li class="breadcrumb-item active">Logs Système</li>
{% endblock %}

{% block content %}
<!-- System Logs Header -->
<div class="row mb-4">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="h2 mb-0 jood-dark">Logs Système</h1>
                <p class="text-muted">Surveillez l'activité et les erreurs du système</p>
            </div>
            <div>
                <button class="btn btn-primary me-2" id="refreshLogs">
                    <i class="fas fa-sync-alt"></i> Actualiser
                </button>
                <button class="btn btn-outline-primary" data-coreui-toggle="modal" data-coreui-target="#exportLogsModal">
                    <i class="fas fa-download"></i> Exporter
                </button>
            </div>
        </div>
    </div>
</div>

<!-- Error Alert Container -->
<div id="errorAlert" class="alert alert-danger d-none" role="alert">
    <i class="fas fa-exclamation-triangle me-2"></i>
    <span id="errorMessage"></span>
    <button type="button" class="btn-close" onclick="document.getElementById('errorAlert').classList.add('d-none')"></button>
</div>

<!-- Success Alert Container -->
<div id="successAlert" class="alert alert-success d-none" role="alert">
    <i class="fas fa-check-circle me-2"></i>
    <span id="successMessage"></span>
    <button type="button" class="btn-close" onclick="document.getElementById('successAlert').classList.add('d-none')"></button>
</div>

<!-- Log Stats -->
<div class="row g-4 mb-4">
    <div class="col-lg-3 col-sm-6">
        <div class="card jood-widget-card jood-info-bg">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="widget-value" data-stat="logs-today">
                            <span class="spinner-border spinner-border-sm" role="status"></span>
                        </div>
                        <div class="widget-label">Logs aujourd'hui</div>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-file-alt fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-3 col-sm-6">
        <div class="card jood-widget-card jood-secondary-bg">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="widget-value" data-stat="errors">
                            <span class="spinner-border spinner-border-sm" role="status"></span>
                        </div>
                        <div class="widget-label">Erreurs</div>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-exclamation-triangle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-3 col-sm-6">
        <div class="card jood-widget-card jood-warning-bg">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="widget-value" data-stat="warnings">
                            <span class="spinner-border spinner-border-sm" role="status"></span>
                        </div>
                        <div class="widget-label">Avertissements</div>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-exclamation-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="col-lg-3 col-sm-6">
        <div class="card jood-widget-card jood-primary-bg">
            <div class="card-body">
                <div class="d-flex align-items-center">
                    <div class="flex-grow-1">
                        <div class="widget-value" data-stat="info">
                            <span class="spinner-border spinner-border-sm" role="status"></span>
                        </div>
                        <div class="widget-label">Info</div>
                    </div>
                    <div class="flex-shrink-0">
                        <i class="fas fa-info-circle fa-2x opacity-75"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Log Filters -->
<div class="card mb-4">
    <div class="card-header">
        <div class="d-flex justify-content-between align-items-center">
            <h4 class="card-title mb-0">Filtres des Logs</h4>
            <button class="btn btn-outline-secondary btn-sm" id="toggleFilters">
                <i class="fas fa-filter"></i> Filtres
            </button>
        </div>
    </div>
    <div class="card-body" id="filtersPanel">
        <div class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Niveau</label>
                <select class="form-select" id="logLevel">
                    <option value="">Tous les niveaux</option>
                    <option value="error">Erreur</option>
                    <option value="warning">Avertissement</option>
                    <option value="info">Information</option>
                    <option value="debug">Debug</option>
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Composant</label>
                <select class="form-select" id="logComponent">
                    <option value="">Tous les composants</option>
                    <option value="auth">Authentification</option>
                    <option value="orders">Commandes</option>
                    <option value="kitchen">Cuisine</option>
                    <option value="customers">Clients</option>
                    <option value="payment">Paiement</option>
                    <option value="menu">Menus</option>
                    <option value="admin">Administration</option>
                    <option value="security">Sécurité</option>
                    <option value="system">Système</option>
                </select>
            </div>
            <div class="col-md-2">
                <label class="form-label">Date début</label>
                <input type="datetime-local" class="form-control" id="dateStart">
            </div>
            <div class="col-md-2">
                <label class="form-label">Date fin</label>
                <input type="datetime-local" class="form-control" id="dateEnd">
            </div>
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <div class="d-flex gap-2">
                    <button class="btn btn-primary" id="applyFilters">
                        <i class="fas fa-search"></i>
                    </button>
                    <button class="btn btn-outline-secondary" id="clearFilters">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Real-time Logs -->
<div class="row g-4">
    <!-- Logs Table -->
    <div class="col-lg-8">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex align-items-center">
                        <!-- Tab Navigation -->
                        <ul class="nav nav-pills me-3" id="logsTabs" role="tablist">
                            <li class="nav-item" role="presentation">
                                <button class="nav-link active" id="system-logs-tab" data-coreui-toggle="pill" data-coreui-target="#system-logs" type="button" role="tab">
                                    <i class="fas fa-stream"></i> Logs Système
                                </button>
                            </li>
                            <li class="nav-item" role="presentation">
                                <button class="nav-link" id="user-activities-tab" data-coreui-toggle="pill" data-coreui-target="#user-activities" type="button" role="tab">
                                    <i class="fas fa-users"></i> Activités Utilisateurs
                                </button>
                            </li>
                        </ul>
                    </div>
                    <div class="d-flex align-items-center gap-2">
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="autoRefresh" checked>
                            <label class="form-check-label" for="autoRefresh">
                                Auto-actualisation
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-body p-0">
                <!-- Tab Content -->
                <div class="tab-content" id="logsTabsContent">
                    <!-- System Logs Tab -->
                    <div class="tab-pane fade show active" id="system-logs" role="tabpanel">
                        <div class="log-container" style="height: 600px; overflow-y: auto; font-family: 'Courier New', monospace;">
                            <div id="logsContent">
                                <div class="text-center text-muted py-5">
                                    <span class="spinner-border" role="status"></span>
                                    <div class="mt-2">Chargement des logs en temps réel...</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- User Activities Tab -->
                    <div class="tab-pane fade" id="user-activities" role="tabpanel">
                        <div class="activity-container" style="height: 600px; overflow-y: auto;">
                            <!-- User Activities Filters -->
                            <div class="p-3 border-bottom bg-light">
                                <div class="row g-2">
                                    <div class="col-md-3">
                                        <label class="form-label small">Profil Utilisateur</label>
                                        <select class="form-select form-select-sm" id="activityProfileType">
                                            <option value="">Tous les profils</option>
                                            <option value="AdminProfile">Administrateurs</option>
                                            <option value="ClientProfile">Clients</option>
                                            <option value="KitchenProfile">Staff Cuisine</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="form-label small">Action</label>
                                <select class="form-select form-select-sm" id="activityAction">
                                    <option value="">Toutes les actions</option>
                                    <option value="insert">Créations</option>
                                    <option value="update">Modifications</option>
                                    <option value="remove">Suppressions</option>
                                </select>
                                    </div>
                                    <div class="col-md-3">
                                        <label class="form-label small">Type d'Entité</label>
                                        <select class="form-select form-select-sm" id="activityEntityType">
                                            <option value="">Toutes les entités</option>
                                            <option value="User">Utilisateur</option>
                                            <option value="Menu">Menu</option>
                                            <option value="Plat">Plat</option>
                                            <option value="Commande">Commande</option>
                                            <option value="Permission">Permission</option>
                                            <option value="AdminProfile">Profil Admin</option>
                                            <option value="ClientProfile">Profil Client</option>
                                        </select>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="d-flex gap-1 align-items-end h-100">
                                            <button class="btn btn-primary btn-sm" id="applyActivityFilters">
                                                <i class="fas fa-filter"></i> Filtrer
                                            </button>
                                            <button class="btn btn-outline-secondary btn-sm" id="clearActivityFilters">
                                                <i class="fas fa-times"></i>
                                            </button>
                                            <button class="btn btn-outline-info btn-sm" id="refreshActivities">
                                                <i class="fas fa-sync-alt"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Activities Content -->
                            <div id="activitiesContent" class="p-3">
                                <div class="text-center text-muted py-5">
                                    <span class="spinner-border" role="status"></span>
                                    <div class="mt-2">Chargement des activités utilisateurs...</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Log Analytics -->
    <div class="col-lg-4">
        <!-- Recent Errors -->
        <div class="card mb-4">
            <div class="card-header jood-secondary-bg">
                <h5 class="card-title mb-0 text-white">
                    <i class="fas fa-bug"></i> Erreurs Récentes
                </h5>
            </div>
            <div class="card-body">
                <div class="list-group list-group-flush recent-errors-list">
                    <div class="text-center text-muted py-3">
                        <span class="spinner-border spinner-border-sm" role="status"></span>
                        Chargement des erreurs...
                    </div>
                </div>
            </div>
        </div>

        <!-- User Activities Summary -->
        <div class="card mb-4">
            <div class="card-header jood-primary-bg">
                <h5 class="card-title mb-0 text-white">
                    <i class="fas fa-users"></i> Activités Récentes
                </h5>
            </div>
            <div class="card-body">
                <!-- Activity Stats -->
                <div class="row g-2 mb-3">
                    <div class="col-6">
                        <div class="text-center">
                            <div class="h5 mb-0" id="todayActivitiesCount">-</div>
                            <small class="text-muted">Aujourd'hui</small>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="text-center">
                            <div class="h5 mb-0" id="weekActivitiesCount">-</div>
                            <small class="text-muted">Cette semaine</small>
                        </div>
                    </div>
                </div>
                
                <!-- Recent activities list -->
                <div class="recent-activities-list" style="max-height: 300px; overflow-y: auto;">
                    <div class="text-center text-muted py-3">
                        <span class="spinner-border spinner-border-sm" role="status"></span>
                        Chargement des activités...
                    </div>
                </div>
            </div>
        </div>

        <!-- Log Distribution -->
        <div class="card">
            <div class="card-header jood-info-bg">
                <h5 class="card-title mb-0 text-white">
                    <i class="fas fa-chart-pie"></i> Répartition (24h)
                </h5>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div>
                        <i class="fas fa-info-circle text-primary me-2"></i>
                        <span>Info</span>
                    </div>
                    <span class="fw-bold" data-distribution="info">--%</span>
                </div>
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div>
                        <i class="fas fa-exclamation-circle jood-warning me-2"></i>
                        <span>Warning</span>
                    </div>
                    <span class="fw-bold" data-distribution="warning">--%</span>
                </div>
                <div class="d-flex justify-content-between align-items-center mb-2">
                    <div>
                        <i class="fas fa-exclamation-triangle jood-secondary me-2"></i>
                        <span>Error</span>
                    </div>
                    <span class="fw-bold" data-distribution="error">--%</span>
                </div>
                <div class="d-flex justify-content-between align-items-center">
                    <div>
                        <i class="fas fa-bug text-dark me-2"></i>
                        <span>Debug</span>
                    </div>
                    <span class="fw-bold" data-distribution="debug">--%</span>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Export Logs Modal -->
<div class="modal fade" id="exportLogsModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header jood-primary-bg">
                <h5 class="modal-title text-white">
                    <i class="fas fa-download"></i> Exporter les Logs
                </h5>
                <button type="button" class="btn-close btn-close-white" data-coreui-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="exportLogsForm">
                    <div class="row g-3">
                        <div class="col-12">
                            <label class="form-label">Format d'export</label>
                            <select class="form-select" name="format">
                                <option value="csv">CSV</option>
                                <option value="json">JSON</option>
                                <option value="txt">Fichier texte</option>
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Date début</label>
                            <input type="date" class="form-control" name="dateStart">
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Date fin</label>
                            <input type="date" class="form-control" name="dateEnd">
                        </div>
                        <div class="col-12">
                            <label class="form-label">Niveaux à inclure</label>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="exportError" name="exportError" checked>
                                <label class="form-check-label" for="exportError">Erreurs</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="exportWarning" name="exportWarning" checked>
                                <label class="form-check-label" for="exportWarning">Avertissements</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="exportInfo" name="exportInfo">
                                <label class="form-check-label" for="exportInfo">Informations</label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="exportDebug" name="exportDebug">
                                <label class="form-check-label" for="exportDebug">Debug</label>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-coreui-dismiss="modal">Annuler</button>
                <button type="button" class="btn btn-primary">
                    <i class="fas fa-download"></i> Exporter
                </button>
            </div>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<!-- Include the logs API JavaScript -->
<script src="{{ asset('js/admin/logs-api.js') }}"></script>
<!-- Include the user activities API JavaScript -->
<script src="{{ asset('js/admin/user-activities-api.js') }}"></script>

<!-- Enhanced initialization with improved error handling and activities integration -->
<script>
document.addEventListener('DOMContentLoaded', function() {
    console.log('🚀 Initializing Logs & Activities System...');
    
    // Global error handler
    window.showError = function(message) {
        const errorAlert = document.getElementById('errorAlert');
        const errorMessage = document.getElementById('errorMessage');
        if (errorAlert && errorMessage) {
            errorMessage.textContent = message;
            errorAlert.classList.remove('d-none');
        }
        console.error('Error:', message);
    };
    
    // Global success handler
    window.showSuccess = function(message) {
        const successAlert = document.getElementById('successAlert');
        const successMessage = document.getElementById('successMessage');
        if (successAlert && successMessage) {
            successMessage.textContent = message;
            successAlert.classList.remove('d-none');
            setTimeout(() => successAlert.classList.add('d-none'), 3000);
        }
    };

    // Manual refresh button functionality
    const refreshButton = document.getElementById('refreshLogs');
    if (refreshButton) {
        refreshButton.addEventListener('click', function() {
            console.log('🔄 Manual refresh triggered');
            refreshButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Actualisation...';
            
            Promise.all([
                window.logsManager ? window.logsManager.loadData() : Promise.resolve(),
                window.activitiesManager ? window.activitiesManager.loadAllData() : Promise.resolve()
            ]).finally(() => {
                setTimeout(() => {
                    refreshButton.innerHTML = '<i class="fas fa-sync-alt"></i> Actualiser';
                }, 1000);
            });
        });
    }

    // Initialize activities manager
    if (window.ActivitiesManager) {
        window.activitiesManager = new ActivitiesManager();
        console.log('✅ Activities Manager created');
    } else {
        console.warn('⚠️ ActivitiesManager not found - check if user-activities-api.js loaded');
    }

    // Handle user activities tab activation
    const userActivitiesTab = document.getElementById('user-activities-tab');
    if (userActivitiesTab) {
        userActivitiesTab.addEventListener('shown.coreui.tab', function() {
            console.log('📋 User Activities tab activated');
            
            if (window.activitiesManager) {
                if (!window.activitiesManager.initialized) {
                    console.log('🔄 Initializing Activities Manager...');
                    window.activitiesManager.init().catch(error => {
                        console.error('Failed to initialize activities:', error);
                        window.showError('Erreur lors du chargement des activités');
                    });
                } else {
                    console.log('🔄 Refreshing activities data...');
                    window.activitiesManager.loadAllData().catch(error => {
                        console.error('Failed to refresh activities:', error);
                        window.showError('Erreur lors de l\'actualisation des activités');
                    });
                }
            } else {
                console.error('❌ Activities manager not available');
                window.showError('Gestionnaire d\'activités non disponible');
            }
        });
    }

    // Setup activities filter controls
    const applyActivityFiltersBtn = document.getElementById('applyActivityFilters');
    if (applyActivityFiltersBtn) {
        applyActivityFiltersBtn.addEventListener('click', function() {
            if (window.activitiesManager) {
                console.log('🔍 Applying activity filters...');
                
                const filters = {
                    profileType: document.getElementById('activityProfileType')?.value || '',
                    action: document.getElementById('activityAction')?.value || '',
                    entityType: document.getElementById('activityEntityType')?.value || ''
                };

                // Remove empty filters
                Object.keys(filters).forEach(key => {
                    if (!filters[key]) delete filters[key];
                });

                console.log('Applied filters:', filters);
                window.activitiesManager.currentFilters = filters;
                window.activitiesManager.loadActivities().catch(error => {
                    console.error('Filter application failed:', error);
                    window.showError('Erreur lors de l\'application des filtres');
                });
            }
        });
    }

    // Clear activity filters
    const clearActivityFiltersBtn = document.getElementById('clearActivityFilters');
    if (clearActivityFiltersBtn) {
        clearActivityFiltersBtn.addEventListener('click', function() {
            console.log('🧹 Clearing activity filters...');
            
            // Clear filter selects
            document.getElementById('activityProfileType').value = '';
            document.getElementById('activityAction').value = '';
            document.getElementById('activityEntityType').value = '';
            
            if (window.activitiesManager) {
                window.activitiesManager.currentFilters = {};
                window.activitiesManager.loadActivities().catch(error => {
                    console.error('Failed to clear filters:', error);
                    window.showError('Erreur lors de l\'effacement des filtres');
                });
            }
        });
    }

    // Refresh activities button
    const refreshActivitiesBtn = document.getElementById('refreshActivities');
    if (refreshActivitiesBtn) {
        refreshActivitiesBtn.addEventListener('click', function() {
            if (window.activitiesManager) {
                console.log('🔄 Manual activities refresh...');
                refreshActivitiesBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                
                window.activitiesManager.loadAllData().finally(() => {
                    setTimeout(() => {
                        refreshActivitiesBtn.innerHTML = '<i class="fas fa-sync-alt"></i>';
                    }, 1000);
                });
            }
        });
    }

    // Load sidebar activities immediately
    loadSidebarActivities();
    
    console.log('✅ Logs & Activities System initialized');
});

// Enhanced sidebar activities loader with better error handling
async function loadSidebarActivities() {
    const activitiesList = document.querySelector('.recent-activities-list');
    const todayCount = document.getElementById('todayActivitiesCount');
    const weekCount = document.getElementById('weekActivitiesCount');
    
    if (!activitiesList) return;

    try {
        let api;
        
        // Try to use the global activities manager first
        if (window.activitiesManager && window.activitiesManager.api) {
            console.log('✅ Using global activities manager for sidebar');
            api = window.activitiesManager.api;
        } else {
            console.log('⚠️ Global manager not available, creating new API instance');
            // Check if UserActivitiesAPI class is available
            if (typeof UserActivitiesAPI === 'undefined') {
                console.warn('❌ UserActivitiesAPI class not available for sidebar');
                activitiesList.innerHTML = '<div class="text-center text-muted py-3">API non disponible</div>';
                return;
            }
            console.log('🔧 Creating new UserActivitiesAPI instance');
            api = new UserActivitiesAPI();
        }
        
        console.log('🔄 Loading sidebar activities...');
        
        // Load recent activities
        const activitiesResult = await api.getActivities({}, 8);
        console.log('📊 Activities result:', activitiesResult);
        
        // Load stats  
        const statsResult = await api.getStats();
        console.log('📈 Stats result:', statsResult);
        
        if (activitiesResult && activitiesResult.success && activitiesResult.data.length > 0) {
            const activitiesHtml = activitiesResult.data.map(activity => `
                <div class="activity-item py-2 border-bottom">
                    <div class="d-flex justify-content-between align-items-start">
                        <div class="flex-grow-1">
                            <div class="fw-semibold small">${activity.user_name || 'Système'}</div>
                            <div class="small text-muted">
                                <span class="badge bg-${getActionBadgeColor(activity.action)} me-1">${activity.action}</span>
                                ${activity.entity_type} ${activity.entity_id ? '#' + activity.entity_id : ''}
                            </div>
                        </div>
                        <small class="text-muted">${formatTimeAgo(activity.logged_at_formatted)}</small>
                    </div>
                </div>
            `).join('');
            
            activitiesList.innerHTML = activitiesHtml;
        } else {
            activitiesList.innerHTML = '<div class="text-center text-muted py-3">Aucune activité récente</div>';
        }
        
        // Update stats if available
        if (statsResult && statsResult.success && statsResult.data) {
            if (todayCount) todayCount.textContent = statsResult.data.today_activities || '0';
            if (weekCount) weekCount.textContent = statsResult.data.week_activities || '0';
        }
        
    } catch (error) {
        console.error('Error loading sidebar activities:', error);
        activitiesList.innerHTML = '<div class="text-center text-danger py-3"><i class="fas fa-exclamation-triangle"></i> Erreur de chargement</div>';
    }
}

// Helper functions
function getActionBadgeColor(action) {
    const colors = {
        'insert': 'success',
        'create': 'success',
        'update': 'warning', 
        'remove': 'danger',
        'delete': 'danger'
    };
    return colors[action] || 'secondary';
}

function formatTimeAgo(dateString) {
    if (!dateString) return 'N/A';
    
    try {
        // Handle both "18/06/2025 14:30:15" and ISO formats
        let date;
        if (dateString.includes('/')) {
            const parts = dateString.split(' ');
            const dateParts = parts[0].split('/');
            const timeParts = parts[1]?.split(':') || ['00', '00', '00'];
            date = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1], timeParts[2]);
        } else {
            date = new Date(dateString);
        }
        
        const now = new Date();
        const diffInSeconds = Math.floor((now - date) / 1000);
        
        if (diffInSeconds < 60) return 'À l\'instant';
        if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m`;
        if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h`;
        return `${Math.floor(diffInSeconds / 86400)}j`;
    } catch (error) {
        console.warn('Date parsing error:', error, dateString);
        return 'N/A';
    }
}
</script>
{% endblock %} 